Execute following queries on "emp" and "dept" dataset using CTE.
 1
 . Find emp with max sal of each dept.
 
 with dept_sal as 
 (select deptno, max(sal) max_sal from emp group by deptno)
 select ename, e.deptno, sal from emp e
 inner join dept_sal d on d.deptno = e.deptno
 where e.sal = max_sal;
 +--------+-----------+---------+
| ename  | e.deptno  |   sal   |
+--------+-----------+---------+
| KING   | 10        | 5000.0  |
| SCOTT  | 20        | 3000.0  |
| FORD   | 20        | 3000.0  |
| BLAKE  | 30        | 2850.0  |
+--------+-----------+---------+
4 rows selected (38.397 seconds)

 
 2
 . Find avg of deptwise total sal.
 
 with avg_deptsal as
 (select deptno, avg(sal) from emp group by deptno)
 select * from avg_deptsal;
 +---------------------+---------------------+
| avg_deptsal.deptno  |   avg_deptsal._c1   |
+---------------------+---------------------+
| 10                  | 2916.6666666666665  |
| 20                  | 2175.0              |
| 30                  | 1566.6666666666667  |
+---------------------+---------------------+
3 rows selected (20.602 seconds)

 
 3
 . Compare (show side-by-side) sal of each emp with avg sal in his dept and avg sal for his job.
 
with avg_dept as  
 (select deptno, avg(sal) avg_deptno_sal from emp group by deptno)
 , avg_job as 
 (select job, avg(sal) avg_job_sal from emp group by job)
 select ename, sal, avg_deptno_sal, avg_job_sal from emp e
 inner join avg_dept d on d.deptno = e.deptno
 inner join avg_job j on j.job = e.job;
+---------+---------+---------------------+---------------------+
|  ename  |   sal   |   avg_deptno_sal    |     avg_job_sal     |
+---------+---------+---------------------+---------------------+
| CLARK   | 2450.0  | 2916.6666666666665  | 2758.3333333333335  |
| KING    | 5000.0  | 2916.6666666666665  | 5000.0              |
| MILLER  | 1300.0  | 2916.6666666666665  | 1037.5              |
| SMITH   | 800.0   | 2175.0              | 1037.5              |
| JONES   | 2975.0  | 2175.0              | 2758.3333333333335  |
| SCOTT   | 3000.0  | 2175.0              | 3000.0              |
| ADAMS   | 1100.0  | 2175.0              | 1037.5              |
| FORD    | 3000.0  | 2175.0              | 3000.0              |
| ALLEN   | 1600.0  | 1566.6666666666667  | 1400.0              |
| WARD    | 1250.0  | 1566.6666666666667  | 1400.0              |
| MARTIN  | 1250.0  | 1566.6666666666667  | 1400.0              |
| BLAKE   | 2850.0  | 1566.6666666666667  | 2758.3333333333335  |
| TURNER  | 1500.0  | 1566.6666666666667  | 1400.0              |
| JAMES   | 950.0   | 1566.6666666666667  | 1037.5              |
+---------+---------+---------------------+---------------------+
14 rows selected (81.139 seconds)
 
 4
 . Divide emps by category -- Poor < 1500, 1500 <= Middle <= 2500, Rich > 2500. Hint: CASE ... WHEN. Count emps for each category.
 
 with emp_category as
 (select sal, 
 case
 when sal < 1500 then "Poor"
 when sal>=1500 and sal<=2500 then "Middle"
 when sal > 2500 then "Rich"
 end as category
 from emp
 )
 select category, count(category) from emp_category group by category;
 +-----------+------+
| category  | _c1  |
+-----------+------+
| Middle    | 3    |
| Poor      | 6    |
| Rich      | 5    |
+-----------+------+
3 rows selected (17.947 seconds)

 
 5
 . Display emps with category (as above), empno, ename, sal and dname.
 
 with emp_category as (
 select empno,ename,deptno,sal, 
 case
 when sal < 1500 then "Poor"
 when sal>=1500 and sal<=2500 then "Middle"
 when sal > 2500 then "Rich"
 end as category
 from emp
 )
 select empno, ename, sal, category, dname from emp_category e
 inner join dept d on d.deptno = e.deptno;
 +--------+---------+---------+-----------+-------------+
| empno  |  ename  |   sal   | category  |    dname    |
+--------+---------+---------+-----------+-------------+
| 7369   | SMITH   | 800.0   | Poor      | RESEARCH    |
| 7499   | ALLEN   | 1600.0  | Middle    | SALES       |
| 7521   | WARD    | 1250.0  | Poor      | SALES       |
| 7566   | JONES   | 2975.0  | Rich      | RESEARCH    |
| 7654   | MARTIN  | 1250.0  | Poor      | SALES       |
| 7698   | BLAKE   | 2850.0  | Rich      | SALES       |
| 7782   | CLARK   | 2450.0  | Middle    | ACCOUNTING  |
| 7788   | SCOTT   | 3000.0  | Rich      | RESEARCH    |
| 7839   | KING    | 5000.0  | Rich      | ACCOUNTING  |
| 7844   | TURNER  | 1500.0  | Middle    | SALES       |
| 7876   | ADAMS   | 1100.0  | Poor      | RESEARCH    |
| 7900   | JAMES   | 950.0   | Poor      | SALES       |
| 7902   | FORD    | 3000.0  | Rich      | RESEARCH    |
| 7934   | MILLER  | 1300.0  | Poor      | ACCOUNTING  |
+--------+---------+---------+-----------+-------------+
14 rows selected (19.562 seconds)

 
 6
 
 . Count number of emps in each dept for each category (as above).
 
 
with emp_category_deptwise as (
 select empno,deptno,sal,
 case 
 when sal<1500 then "Poor"
 when sal>=1500 and sal<=2500 then "Middle"
 when sal>2500 then "Rich"
 end as category
 from emp
)
select distinct deptno,category,count(empno) over(partition by deptno,category) category_count_deptwise
from emp_category_deptwise;
+---------+-----------+--------------------------+
| deptno  | category  | category_count_deptwise  |
+---------+-----------+--------------------------+
| 10      | Middle    | 1                        |
| 10      | Poor      | 1                        |
| 10      | Rich      | 1                        |
| 20      | Poor      | 2                        |
| 20      | Rich      | 3                        |
| 30      | Middle    | 2                        |
| 30      | Poor      | 3                        |
| 30      | Rich      | 1                        |
+---------+-----------+--------------------------+
8 rows selected (43.023 seconds)



